// Generated by Haxe 4.0.0-rc.3+e3df7a4
(function ($global) { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Main = function() { };
Main.__name__ = true;
Main.main = function() {
	var container = new components_Container({ height : 100, width : 100, style : new utils_Style({ color : new utils_Color(utils_Colors.red)}), child : new components_Button({ text : "Click me", onClick : function(event) {
		console.log("src/Main.hx:17:",event);
		window.alert("You clicked me!");
	}})});
	window.document.body.appendChild(container.render());
};
Math.__name__ = true;
var components_Button = function(arg) {
	this.onClick = null;
	this.text = "";
	this.text = arg.text;
	this.onClick = arg.onClick;
};
components_Button.__name__ = true;
components_Button.prototype = {
	render: function() {
		var button = window.document.createElement("button");
		button.textContent = this.text;
		button.onclick = this.onClick;
		return button;
	}
};
var components_Container = function(arg) {
	this.child = null;
	this.style = null;
	this.width = -1.0;
	this.height = -1.0;
	this.height = arg.height;
	this.width = arg.width;
	this.style = arg.style;
	this.child = arg.child;
};
components_Container.__name__ = true;
components_Container.prototype = {
	render: function() {
		var container = window.document.createElement("div");
		container.appendChild(this.child.render());
		new support_StyleManager().addStyleToDiv(this.height,this.width,container,this.style);
		return container;
	}
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = o.length;
			while(_g3 < _g11) {
				var i = _g3++;
				str += (i > 0 ? "," : "") + js_Boot.__string_rec(o[i],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		var k = null;
		for( k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var support_StyleManager = function() {
};
support_StyleManager.__name__ = true;
support_StyleManager.prototype = {
	addStyleToDiv: function(height,width,widget,style) {
		widget.style.width = width == Infinity ? "100" + "%" : width == null ? "null" : "" + width;
		widget.style.height = height == Infinity ? "100" + "%" : height == null ? "null" : "" + height;
		widget.style.backgroundColor = style.getColor();
		return widget;
	}
};
var utils_Colors = $hxEnums["utils.Colors"] = { __ename__ : true, __constructs__ : ["red","blue","white","transparent","rgb"]
	,red: {_hx_index:0,__enum__:"utils.Colors",toString:$estr}
	,blue: {_hx_index:1,__enum__:"utils.Colors",toString:$estr}
	,white: {_hx_index:2,__enum__:"utils.Colors",toString:$estr}
	,transparent: {_hx_index:3,__enum__:"utils.Colors",toString:$estr}
	,rgb: ($_=function(r,g,b) { return {_hx_index:4,r:r,g:g,b:b,__enum__:"utils.Colors",toString:$estr}; },$_.__params__ = ["r","g","b"],$_)
};
var utils_Color = function(color) {
	this.color = null;
	this.color = color;
};
utils_Color.__name__ = true;
utils_Color.prototype = {
	getColor: function() {
		return "#70C5B0";
	}
};
var utils_Style = function(arg) {
	this.color = null;
	this.color = arg.color != null ? arg.color : new utils_Color(utils_Colors.transparent);
};
utils_Style.__name__ = true;
utils_Style.prototype = {
	getColor: function() {
		return this.color.getColor();
	}
};
String.__name__ = true;
Array.__name__ = true;
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
js_Boot.__toStr = ({ }).toString;
Main.main();
})({});
